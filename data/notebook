import React, { useEffect, useState } from 'react';
import { StyleSheet, Text, View } from 'react-native';
import { useLocalSearchParams, useRouter } from 'expo-router';
import ExerciseTemplate from '@/template/ExerciseTemplate';
import config from '@/config';

const ExerciseDetails = () => {
  const { id } = useLocalSearchParams();
  const [listing, setListing] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);
  const router = useRouter();

  useEffect(() => {
    if (!id) {
      setError("No ID provided");
      setLoading(false);
      return;
    }

    const fetchExercise = async () => {
      try {
        const response = await fetch(`${config.API_BASE_URL}/exercises/${id}/`);
        const data = await response.json();
        setListing(data);
        setLoading(false);
      } catch (error) {
        setError(error.message);
        setLoading(false);
      }
    };

    fetchExercise();
  }, [id]);

  if (loading) {
    return (
      <View style={styles.loadingContainer}>
        <Text>Loading...</Text>
      </View>
    );
  }

  if (error) {
    return (
      <View style={styles.loadingContainer}>
        <Text>Error: {error}</Text>
      </View>
    );
  }

  return (
    <ExerciseTemplate
      imageUri={listing.image}
      htmlContent={listing.html_content}
      onBack={() => router.back()}
      onBookmark={() => {}}
      onPrev={() => {}}
      onNext={() => {}}
    />
  );
};

export default ExerciseDetails;

const styles = StyleSheet.create({
  loadingContainer: {
    flex: 1,
    justifyContent: "center",
    alignItems: "center",
  },
});
